import streamlit as st
import pandas as pd
from datetime import datetime

# Load today's CSV
today = datetime.now().strftime('%Y-%m-%d')
file_path = f"data/mlb_dashboard_{today}.csv"

st.set_page_config(page_title="MLB Daily Dashboard", layout="wide")
st.title("âš¾ Ya Girl's Betting Dashboard")
st.caption(f"Updated for {today}")

try:
    df = pd.read_csv(file_path)

    # Optional: filter by team
    selected_team = st.selectbox("Filter by Team", ["All"] + sorted(df["Team"].unique().tolist()))
    if selected_team != "All":
        df = df[df["Team"] == selected_team]

    # Safe formatting for mixed data (numbers & strings)
    def safe_format(val, precision=2):
        if isinstance(val, (int, float)):
            return f"{val:.{precision}f}"
        return val

    # Reorder columns based on what's actually in your CSV
    preferred_columns = [
        "Team", "Opponent", "Pitcher", "Pitcher Handedness", 
        "ERA (Last 3 Starts)", "WHIP (Last 3 Starts)",
        "Opponent Pitcher", "Opponent Handedness", 
        "Opponent ERA (Last 3 Starts)", "Opponent WHIP (Last 3 Starts)",
        "Team RPG (L7)", "Team OPS (L7)", "Opp RPG (L7)", "Opp OPS (L7)",
        "Lean Call"
    ]
    df = df[[col for col in preferred_columns if col in df.columns]]

    # Show formatted table
    st.dataframe(df.style.format({
        "ERA (Last 3 Starts)": lambda x: safe_format(x, 2),
        "WHIP (Last 3 Starts)": lambda x: safe_format(x, 2),
        "Team RPG (L7)": lambda x: safe_format(x, 2),
        "Team OPS (L7)": lambda x: safe_format(x, 3),
        "Opp RPG (L7)": lambda x: safe_format(x, 2),
        "Opp OPS (L7)": lambda x: safe_format(x, 3)
    }))

    # Download button
    st.download_button("ðŸ“¥ Download CSV", df.to_csv(index=False), file_name=f"mlb_dashboard_{today}.csv")


except FileNotFoundError:
    st.error("No dashboard CSV found for today. Make sure you've run your notebook to generate it first.")
